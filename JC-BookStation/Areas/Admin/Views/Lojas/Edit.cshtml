@model JC_BookStation.Data.Models.Loja

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var imagePath = (@ViewBag.PastaUpload + @Session["Arquivo"]);
}

@using (Html.BeginForm("Edit", "Lojas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <h2>Editar Dados da Empresa</h2>
    <div class="form-horizontal dados">
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdLoja)
        @Html.HiddenFor(model => model.CPF)
        
        @*<div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.RazaoSocial, "Razão Social", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fantasia, "Nome de Fantasia", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Fantasia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fantasia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CNPJ, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeContato, "Nome do Contato", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NomeContato, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeContato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CEP, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @*@Html.DropDownListFor(model => model.Estado, new SelectList(ViewBag.Estado as System.Collections.IEnumerable, "cod_estado", "nom_estado"), "Selecione o Estado", new { @id = "ddlEstados", @class = "form-control" })*@
                @Html.DropDownList("Estado", null, "Selecione o Estado", htmlAttributes: new { @id = "ddlEstados", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @*@Html.DropDownListFor(model => model.Cidade, Enumerable.Empty<SelectListItem>(), "Selecione a Cidade", new { @id = "ddlCidades", @class = "form-control" })*@
                @Html.DropDownList("Cidade", null, "Selecione a Cidade", htmlAttributes: new { @id = "ddlCidades", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cidade)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaminhoLogo, "Logomarca", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <div class="fileupload fileupload-exists" data-provides="fileupload" data-name="@Url.Content(@imagePath)">
                    @Html.HiddenFor(model => model.CaminhoLogo, new { @value = "1" })
                    <div class="fileupload-preview fileupload-exists thumbnail" data-trigger="fileupload" style="width: 270px; height: 220px;">
                        <img src="@Url.Content(@imagePath)" />
                    </div>
                    <div>
                        <span class="btn btn-default btn-file">
                            <span class="fileupload-new">Selecione imagem</span>
                            <span class="fileupload-exists">Alterar</span>
                            @Html.TextBoxFor(model => model.CaminhoLogo, new { htmlAttributes = new { @type = "file", @class = "form-control", @accept = "image/x-png, image/gif, image/jpeg, image/jpg" }})
                            @Html.ValidationMessageFor(model => model.CaminhoLogo)
                        </span>
                        <a href="#" class="btn btn-default fileupload-exists" data-dismiss="fileupload">Remover</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCadastro, "Data do Cadastro", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control disabled" } })
                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ATIVO, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.CheckBoxFor(model => model.ATIVO, new { htmlAttributes = new { @class = "form-control checkbox" } })
                @Html.ValidationMessageFor(model => model.ATIVO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <button type="submit" class="btn btn-primary">Salvar Registros</button>
                <a class="btn btn-danger" href="@Url.Action("Index")">Cancelar</a>
            </div>
        </div>
    </div>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/MyJS/CidadeEstado.js"></script>
    <script src="~/Scripts/jquery.maskedinput-1.3.1.js"></script>

    <script type="text/javascript">

        jQuery(function ($) {
            //$("#DataCadastro").mask("99/99/9999");
            $("#CNPJ").mask("999.999.999/9999-99");
            $("#CEP").mask("99.999-999");
            //$("#Telefone").mask("(99) 9999-9999");
            //$("#Celular").mask("(99) 9999-9999");
            //$("#CPF").mask("999.999.999-99");
        });

    </script>
}
